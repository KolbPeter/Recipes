@page "/deleterecipe/{recipeId}"
@using RecipesPWA.Common.Recipes
@using RecipesPWA.Common
@using RecipesPWA.Shared.Components
@using RecipesPWA.Shared.FormComponents

@inject IRequestService<Recipe> RequestService
@inject NavigationManager NavigationManager

<PageTitle>Receptek</PageTitle>

<h1>Recept törlése</h1>

<RecipeComponent Recipe="@RecipeToDelete" />
<EditForm Model="@Decision">
    <DecideForm Message="Valóban törölni akarod ezt receptet?"
                @bind-Value="@Decision" />
</EditForm>

@code {
    [Parameter]
    public string recipeId { get; set; }

    public bool Decision
    {
        get => false;
        set => DecisionMade(value);
    }

    private async void DecisionMade(bool value)
    {
        if (value) await RequestService.Remove(RecipeToDelete);
        
        NavigationManager.NavigateTo("/selectrecipe");
    }

    private Recipe RecipeToDelete { get; set; } = new()
        {
            Name = string.Empty,
            Instructions = Array.Empty<string>(),
            SubRecipes = Array.Empty<SubRecipe>()
        };

    protected override async Task OnInitializedAsync()
    {
        var recipeToDelete = await RequestService.GetById(recipeId);
        if (recipeToDelete == null)
        {
            NavigationManager.NavigateTo("/selectrecipe");
        }

        RecipeToDelete = new()
            {
                Id = recipeToDelete.Id,
                Name = recipeToDelete.Name,
                Instructions = recipeToDelete.Instructions,
                SubRecipes = recipeToDelete.SubRecipes
            };
    }
}
